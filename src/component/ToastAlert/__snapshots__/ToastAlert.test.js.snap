// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppButton should render error alert 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Array [
          Object {
            "borderWidth": 0,
            "left": 0,
            "position": "absolute",
            "top": 0,
          },
          Object {
            "height": 1334,
            "width": 750,
          },
        ]
      }
    >
      <View
        dataSet={Object {}}
        space={3}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#fecaca",
            "borderLeftColor": "#b91c1c",
            "borderLeftWidth": 4,
            "borderRadius": 4,
            "justifyContent": "flex-start",
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": 710,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexShrink": 1,
              "width": 665,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "flexShrink": 1,
                "justifyContent": "space-between",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "flexShrink": 1,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4290321436}
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#b91c1c",
                        "height": 16,
                        "width": 16,
                      },
                      Object {
                        "flex": 0,
                        "height": 16,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4290321436}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGGroup
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGPath
                          d="M13.9193 18.4271C13.8992 17.9392 13.6816 17.4813 13.3178 17.1478C12.9545 16.8148 12.4731 16.631 11.975 16.6304H11.9746H11.945V16.6304L11.9392 16.6305C11.6898 16.6348 11.4434 16.6864 11.2142 16.7827L11.333 17.0655L11.2142 16.7827C10.9851 16.879 10.7773 17.0183 10.6035 17.1931C10.4296 17.368 10.2932 17.5751 10.2031 17.8026C10.113 18.0302 10.0712 18.2732 10.0806 18.5171L10.0807 18.5176C10.1001 19.0055 10.3169 19.4638 10.6802 19.7979C11.043 20.1315 11.5241 20.3162 12.0222 20.3177H12.0233H12.0529V20.3178L12.058 20.3177C12.3081 20.3138 12.5552 20.2624 12.785 20.1661C13.0148 20.0698 13.2232 19.9303 13.3974 19.7549C13.5716 19.5795 13.7081 19.3718 13.7981 19.1436C13.8881 18.9153 13.9295 18.6716 13.9193 18.4271ZM13.9193 18.4271L13.5863 18.4408M13.9193 18.4271C13.9193 18.4271 13.9193 18.4271 13.9193 18.427L13.5863 18.4408M13.5863 18.4408C13.5945 18.6386 13.5611 18.836 13.488 19.0213C13.415 19.2066 13.3037 19.3762 13.1609 19.52C13.018 19.6638 12.8464 19.779 12.6561 19.8587C12.4658 19.9385 12.2607 19.9812 12.0529 19.9844H12.0233C11.6062 19.9831 11.2058 19.8284 10.9059 19.5525C10.6059 19.2767 10.4296 18.9011 10.4137 18.5043C10.4061 18.3069 10.4399 18.1101 10.513 17.9254C10.5862 17.7406 10.6973 17.5715 10.8399 17.4281C10.9824 17.2847 11.1536 17.1698 11.3434 17.09C11.5331 17.0103 11.7376 16.9674 11.945 16.9638H11.9746C12.3916 16.9642 12.7922 17.1182 13.0926 17.3936C13.393 17.6689 13.5699 18.0442 13.5863 18.4408ZM23.4665 20.2125L23.4665 20.2125C23.6068 20.4676 23.6751 20.7517 23.6658 21.0376C23.6566 21.3234 23.57 21.6033 23.4131 21.8501C23.2562 22.097 23.0337 22.3031 22.7658 22.4469C22.4978 22.5907 22.1942 22.6667 21.8847 22.6667H21.8846H2.11538H2.11533C1.80576 22.6667 1.50222 22.5907 1.23422 22.4469C0.96631 22.3031 0.743845 22.097 0.586879 21.8501L0.305565 22.0289L0.586879 21.8501C0.429998 21.6033 0.343434 21.3234 0.334166 21.0376C0.324898 20.7517 0.393165 20.4676 0.533517 20.2125L0.53353 20.2125L10.4192 2.23977C10.5681 1.96911 10.7933 1.74021 11.0721 1.5796C11.3511 1.41893 11.6722 1.33333 12.0005 1.33333C12.3289 1.33333 12.65 1.41893 12.9289 1.5796C13.2078 1.74021 13.4329 1.96911 13.5819 2.23977L23.4665 20.2125ZM11.0224 7.44182C10.7599 7.69176 10.6091 8.03434 10.6091 8.39521V14.4365C10.6091 14.7974 10.7599 15.1399 11.0224 15.3899C11.2843 15.6393 11.6363 15.7767 12 15.7767C12.3637 15.7767 12.7157 15.6393 12.9776 15.3899C13.2401 15.1399 13.3909 14.7974 13.3909 14.4365V8.39521C13.3909 8.03434 13.2401 7.69176 12.9776 7.44182C12.7157 7.19242 12.3637 7.05499 12 7.05499C11.6363 7.05499 11.2843 7.19242 11.0224 7.44182Z"
                          propList={
                            Array [
                              "stroke",
                              "strokeWidth",
                            ]
                          }
                          stroke={
                            Array [
                              2,
                            ]
                          }
                          strokeWidth="0.666667"
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#000000",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Test
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        pointerEvents="none"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            undefined,
          ]
        }
      />
    </View>
    <View
      elevation={0}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Array [
          Object {
            "borderWidth": 0,
            "left": -600,
            "position": "absolute",
            "top": 0,
          },
          Object {
            "height": 1334,
            "width": 600,
          },
        ]
      }
    >
      <View
        dataSet={Object {}}
        style={
          Array [
            Object {
              "backgroundColor": "#eeeeee",
              "flex": 1,
              "justifyContent": "space-between",
              "paddingBottom": 80,
              "paddingTop": 80,
            },
            Array [
              Object {},
            ],
          ]
        }
      >
        <View
          dataSet={Object {}}
          style={
            Array [
              Object {
                "borderBottomWidth": 1,
                "borderColor": "#7f7f7f",
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 20,
                "paddingTop": 8,
              },
              Array [
                Object {},
              ],
            ]
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#a1a1aa",
                    "borderColor": "#27272a",
                    "borderRadius": 9999,
                    "height": 96,
                    "justifyContent": "center",
                    "position": "relative",
                    "width": 96,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    Array [
                      Object {
                        "color": undefined,
                        "fontSize": 40,
                      },
                      undefined,
                      Object {
                        "fontFamily": "FontAwesome",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 18,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 27,
                    "marginBottom": 8,
                    "marginTop": 8,
                    "textDecorationLine": undefined,
                  }
                }
              >
                undefined undefined
              </Text>
            </View>
          </View>
        </View>
        <RCTScrollView
          contentContainerStyle={
            Array [
              Object {},
              Object {
                "dataSet": Object {},
              },
            ]
          }
          data={
            Array [
              Object {
                "icon": <Icon
                  allowFontScaling={false}
                  color="#000000"
                  name="power-off"
                  size={24}
                />,
                "id": "LOGOUT",
                "label": "LOGOUT",
                "onPress": [Function],
              },
            ]
          }
          dataSet={Object {}}
          getItem={[Function]}
          getItemCount={[Function]}
          keyExtractor={[Function]}
          onContentSizeChange={[Function]}
          onLayout={[Function]}
          onMomentumScrollBegin={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          style={Object {}}
          viewabilityConfigCallbackPairs={Array []}
        >
          <View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Array [
                      Object {
                        "borderBottomWidth": 1,
                        "borderColor": "#7f7f7f",
                        "paddingBottom": 8,
                        "paddingLeft": 16,
                        "paddingRight": 20,
                        "paddingTop": 8,
                      },
                      Array [
                        Object {},
                      ],
                    ]
                  }
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "flexDirection": "row",
                      }
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        Array [
                          Object {
                            "color": "#000000",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "FontAwesome",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      
                    </Text>
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "width": 12,
                        }
                      }
                    />
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "justifyContent": "center",
                        }
                      }
                    >
                      <Text
                        dataSet={Object {}}
                        style={
                          Object {
                            "backgroundColor": undefined,
                            "color": "#171717",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontStyle": "normal",
                            "fontWeight": "700",
                            "letterSpacing": 0,
                            "lineHeight": 21,
                            "textDecorationLine": undefined,
                          }
                        }
                      >
                        LOGOUT
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RCTScrollView>
      </View>
      <View
        pointerEvents="none"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`AppButton should render success alert 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Array [
          Object {
            "borderWidth": 0,
            "left": 0,
            "position": "absolute",
            "top": 0,
          },
          Object {
            "height": 1334,
            "width": 750,
          },
        ]
      }
    >
      <View
        dataSet={Object {}}
        space={3}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#bbf7d0",
            "borderLeftColor": "#15803d",
            "borderLeftWidth": 4,
            "borderRadius": 4,
            "justifyContent": "flex-start",
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": 710,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexShrink": 1,
              "width": 665,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "flexShrink": 1,
                "justifyContent": "space-between",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "flexShrink": 1,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4279599165}
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#15803d",
                        "height": 16,
                        "width": 16,
                      },
                      Object {
                        "flex": 0,
                        "height": 16,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4279599165}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24ZM7.17719 11.2464L9.91869 13.9114L16.8228 7.2L18 8.34432L9.91869 16.2L6 12.3907L7.17719 11.2464Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#000000",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Test
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        pointerEvents="none"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            undefined,
          ]
        }
      />
    </View>
    <View
      elevation={0}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Array [
          Object {
            "borderWidth": 0,
            "left": -600,
            "position": "absolute",
            "top": 0,
          },
          Object {
            "height": 1334,
            "width": 600,
          },
        ]
      }
    >
      <View
        dataSet={Object {}}
        style={
          Array [
            Object {
              "backgroundColor": "#eeeeee",
              "flex": 1,
              "justifyContent": "space-between",
              "paddingBottom": 80,
              "paddingTop": 80,
            },
            Array [
              Object {},
            ],
          ]
        }
      >
        <View
          dataSet={Object {}}
          style={
            Array [
              Object {
                "borderBottomWidth": 1,
                "borderColor": "#7f7f7f",
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 20,
                "paddingTop": 8,
              },
              Array [
                Object {},
              ],
            ]
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#a1a1aa",
                    "borderColor": "#27272a",
                    "borderRadius": 9999,
                    "height": 96,
                    "justifyContent": "center",
                    "position": "relative",
                    "width": 96,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    Array [
                      Object {
                        "color": undefined,
                        "fontSize": 40,
                      },
                      undefined,
                      Object {
                        "fontFamily": "FontAwesome",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 18,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 27,
                    "marginBottom": 8,
                    "marginTop": 8,
                    "textDecorationLine": undefined,
                  }
                }
              >
                undefined undefined
              </Text>
            </View>
          </View>
        </View>
        <RCTScrollView
          contentContainerStyle={
            Array [
              Object {},
              Object {
                "dataSet": Object {},
              },
            ]
          }
          data={
            Array [
              Object {
                "icon": <Icon
                  allowFontScaling={false}
                  color="#000000"
                  name="power-off"
                  size={24}
                />,
                "id": "LOGOUT",
                "label": "LOGOUT",
                "onPress": [Function],
              },
            ]
          }
          dataSet={Object {}}
          getItem={[Function]}
          getItemCount={[Function]}
          keyExtractor={[Function]}
          onContentSizeChange={[Function]}
          onLayout={[Function]}
          onMomentumScrollBegin={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          style={Object {}}
          viewabilityConfigCallbackPairs={Array []}
        >
          <View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Array [
                      Object {
                        "borderBottomWidth": 1,
                        "borderColor": "#7f7f7f",
                        "paddingBottom": 8,
                        "paddingLeft": 16,
                        "paddingRight": 20,
                        "paddingTop": 8,
                      },
                      Array [
                        Object {},
                      ],
                    ]
                  }
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "flexDirection": "row",
                      }
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        Array [
                          Object {
                            "color": "#000000",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "FontAwesome",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      
                    </Text>
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "width": 12,
                        }
                      }
                    />
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "justifyContent": "center",
                        }
                      }
                    >
                      <Text
                        dataSet={Object {}}
                        style={
                          Object {
                            "backgroundColor": undefined,
                            "color": "#171717",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontStyle": "normal",
                            "fontWeight": "700",
                            "letterSpacing": 0,
                            "lineHeight": 21,
                            "textDecorationLine": undefined,
                          }
                        }
                      >
                        LOGOUT
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RCTScrollView>
      </View>
      <View
        pointerEvents="none"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;
