// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Backgroun3 should match snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Array [
          Object {
            "borderWidth": 0,
            "left": 0,
            "position": "absolute",
            "top": 0,
          },
          Object {
            "height": 1334,
            "width": 750,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "position": "absolute",
            },
          ]
        }
      >
        <RNSVGSvgView
          bbHeight={1334}
          bbWidth={750}
          focusable={false}
          height={1334}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 1334,
                "width": 750,
              },
            ]
          }
          width={750}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M 0,0
      L 0,266.8
      C 50 316.8, 700 316.8, 750 266.8
      L 750,0
      Z"
              fill={4278199178}
              propList={
                Array [
                  "fill",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        pointerEvents="none"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            undefined,
          ]
        }
      />
    </View>
    <View
      elevation={0}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Array [
          Object {
            "borderWidth": 0,
            "left": -600,
            "position": "absolute",
            "top": 0,
          },
          Object {
            "height": 1334,
            "width": 600,
          },
        ]
      }
    >
      <View
        dataSet={Object {}}
        style={
          Array [
            Object {
              "backgroundColor": "#eeeeee",
              "flex": 1,
              "justifyContent": "space-between",
              "paddingBottom": 80,
              "paddingTop": 80,
            },
            Array [
              Object {},
            ],
          ]
        }
      >
        <RCTScrollView
          contentContainerStyle={
            Array [
              Object {},
              Object {
                "dataSet": Object {},
              },
            ]
          }
          data={
            Array [
              Object {
                "icon": <Icon
                  allowFontScaling={false}
                  color="#000000"
                  name="power-off"
                  size={24}
                />,
                "id": "LOGOUT",
                "label": "LOGOUT",
                "onPress": [Function],
              },
            ]
          }
          dataSet={Object {}}
          getItem={[Function]}
          getItemCount={[Function]}
          keyExtractor={[Function]}
          onContentSizeChange={[Function]}
          onLayout={[Function]}
          onMomentumScrollBegin={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          style={Object {}}
          viewabilityConfigCallbackPairs={Array []}
        >
          <View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Array [
                      Object {
                        "borderBottomWidth": 1,
                        "borderColor": "#7f7f7f",
                        "paddingBottom": 8,
                        "paddingLeft": 16,
                        "paddingRight": 20,
                        "paddingTop": 8,
                      },
                      Array [
                        Object {},
                      ],
                    ]
                  }
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "flexDirection": "row",
                      }
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        Array [
                          Object {
                            "color": "#000000",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "FontAwesome",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï€‘
                    </Text>
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "width": 12,
                        }
                      }
                    />
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "justifyContent": "center",
                        }
                      }
                    >
                      <Text
                        dataSet={Object {}}
                        style={
                          Object {
                            "backgroundColor": undefined,
                            "color": "#171717",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontStyle": "normal",
                            "fontWeight": "700",
                            "letterSpacing": 0,
                            "lineHeight": 21,
                            "textDecorationLine": undefined,
                          }
                        }
                      >
                        LOGOUT
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RCTScrollView>
      </View>
      <View
        pointerEvents="none"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Backgroun4 should match snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Array [
          Object {
            "borderWidth": 0,
            "left": 0,
            "position": "absolute",
            "top": 0,
          },
          Object {
            "height": 1334,
            "width": 750,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "position": "absolute",
            },
          ]
        }
      >
        <RNSVGSvgView
          bbHeight={1334}
          bbWidth={750}
          focusable={false}
          height={1334}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 1334,
                "width": 750,
              },
            ]
          }
          width={750}
        >
          <RNSVGGroup>
            <RNSVGCircle
              cx={0}
              cy={1334}
              fill={4294967295}
              propList={
                Array [
                  "fill",
                  "stroke",
                  "strokeWidth",
                ]
              }
              r={250}
              stroke={4278199178}
              strokeWidth={25}
            />
            <RNSVGCircle
              cx={0}
              cy={1334}
              fill={4294967295}
              propList={
                Array [
                  "fill",
                  "stroke",
                  "strokeWidth",
                ]
              }
              r={150}
              stroke={4278199178}
              strokeWidth={25}
            />
            <RNSVGCircle
              cx={750}
              cy={0}
              fill={4294967295}
              propList={
                Array [
                  "fill",
                  "stroke",
                  "strokeWidth",
                ]
              }
              r={250}
              stroke={4289527808}
              strokeWidth={25}
            />
            <RNSVGCircle
              cx={750}
              cy={0}
              fill={4294967295}
              propList={
                Array [
                  "fill",
                  "stroke",
                  "strokeWidth",
                ]
              }
              r={150}
              stroke={4289527808}
              strokeWidth={25}
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        pointerEvents="none"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            undefined,
          ]
        }
      />
    </View>
    <View
      elevation={0}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Array [
          Object {
            "borderWidth": 0,
            "left": -600,
            "position": "absolute",
            "top": 0,
          },
          Object {
            "height": 1334,
            "width": 600,
          },
        ]
      }
    >
      <View
        dataSet={Object {}}
        style={
          Array [
            Object {
              "backgroundColor": "#eeeeee",
              "flex": 1,
              "justifyContent": "space-between",
              "paddingBottom": 80,
              "paddingTop": 80,
            },
            Array [
              Object {},
            ],
          ]
        }
      >
        <RCTScrollView
          contentContainerStyle={
            Array [
              Object {},
              Object {
                "dataSet": Object {},
              },
            ]
          }
          data={
            Array [
              Object {
                "icon": <Icon
                  allowFontScaling={false}
                  color="#000000"
                  name="power-off"
                  size={24}
                />,
                "id": "LOGOUT",
                "label": "LOGOUT",
                "onPress": [Function],
              },
            ]
          }
          dataSet={Object {}}
          getItem={[Function]}
          getItemCount={[Function]}
          keyExtractor={[Function]}
          onContentSizeChange={[Function]}
          onLayout={[Function]}
          onMomentumScrollBegin={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          style={Object {}}
          viewabilityConfigCallbackPairs={Array []}
        >
          <View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Array [
                      Object {
                        "borderBottomWidth": 1,
                        "borderColor": "#7f7f7f",
                        "paddingBottom": 8,
                        "paddingLeft": 16,
                        "paddingRight": 20,
                        "paddingTop": 8,
                      },
                      Array [
                        Object {},
                      ],
                    ]
                  }
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "flexDirection": "row",
                      }
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        Array [
                          Object {
                            "color": "#000000",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "FontAwesome",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï€‘
                    </Text>
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "width": 12,
                        }
                      }
                    />
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "justifyContent": "center",
                        }
                      }
                    >
                      <Text
                        dataSet={Object {}}
                        style={
                          Object {
                            "backgroundColor": undefined,
                            "color": "#171717",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontStyle": "normal",
                            "fontWeight": "700",
                            "letterSpacing": 0,
                            "lineHeight": 21,
                            "textDecorationLine": undefined,
                          }
                        }
                      >
                        LOGOUT
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RCTScrollView>
      </View>
      <View
        pointerEvents="none"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Backgroun5 should match snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Array [
          Object {
            "borderWidth": 0,
            "left": 0,
            "position": "absolute",
            "top": 0,
          },
          Object {
            "height": 1334,
            "width": 750,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "position": "absolute",
            },
          ]
        }
      >
        <RNSVGSvgView
          bbHeight={1334}
          bbWidth={750}
          focusable={false}
          height={1334}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 1334,
                "width": 750,
              },
            ]
          }
          width={750}
        >
          <RNSVGGroup>
            <RNSVGForeignObject
              height="100%"
              width="100%"
              x={0}
              y={984}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#ad0000",
                    "fontFamily": undefined,
                    "fontSize": 200,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 300,
                    "textDecorationLine": undefined,
                  }
                }
              >
                â‚¹
              </Text>
            </RNSVGForeignObject>
            <RNSVGForeignObject
              height="100%"
              width="100%"
              x={525}
              y={-100}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#00238a",
                    "fontFamily": undefined,
                    "fontSize": 400,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 600,
                    "textDecorationLine": undefined,
                  }
                }
              >
                â‚¹
              </Text>
            </RNSVGForeignObject>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        pointerEvents="none"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            undefined,
          ]
        }
      />
    </View>
    <View
      elevation={0}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Array [
          Object {
            "borderWidth": 0,
            "left": -600,
            "position": "absolute",
            "top": 0,
          },
          Object {
            "height": 1334,
            "width": 600,
          },
        ]
      }
    >
      <View
        dataSet={Object {}}
        style={
          Array [
            Object {
              "backgroundColor": "#eeeeee",
              "flex": 1,
              "justifyContent": "space-between",
              "paddingBottom": 80,
              "paddingTop": 80,
            },
            Array [
              Object {},
            ],
          ]
        }
      >
        <RCTScrollView
          contentContainerStyle={
            Array [
              Object {},
              Object {
                "dataSet": Object {},
              },
            ]
          }
          data={
            Array [
              Object {
                "icon": <Icon
                  allowFontScaling={false}
                  color="#000000"
                  name="power-off"
                  size={24}
                />,
                "id": "LOGOUT",
                "label": "LOGOUT",
                "onPress": [Function],
              },
            ]
          }
          dataSet={Object {}}
          getItem={[Function]}
          getItemCount={[Function]}
          keyExtractor={[Function]}
          onContentSizeChange={[Function]}
          onLayout={[Function]}
          onMomentumScrollBegin={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          style={Object {}}
          viewabilityConfigCallbackPairs={Array []}
        >
          <View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Array [
                      Object {
                        "borderBottomWidth": 1,
                        "borderColor": "#7f7f7f",
                        "paddingBottom": 8,
                        "paddingLeft": 16,
                        "paddingRight": 20,
                        "paddingTop": 8,
                      },
                      Array [
                        Object {},
                      ],
                    ]
                  }
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "flexDirection": "row",
                      }
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        Array [
                          Object {
                            "color": "#000000",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "FontAwesome",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï€‘
                    </Text>
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "width": 12,
                        }
                      }
                    />
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "justifyContent": "center",
                        }
                      }
                    >
                      <Text
                        dataSet={Object {}}
                        style={
                          Object {
                            "backgroundColor": undefined,
                            "color": "#171717",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontStyle": "normal",
                            "fontWeight": "700",
                            "letterSpacing": 0,
                            "lineHeight": 21,
                            "textDecorationLine": undefined,
                          }
                        }
                      >
                        LOGOUT
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RCTScrollView>
      </View>
      <View
        pointerEvents="none"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Background1 should match snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Array [
          Object {
            "borderWidth": 0,
            "left": 0,
            "position": "absolute",
            "top": 0,
          },
          Object {
            "height": 1334,
            "width": 750,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "position": "absolute",
            },
          ]
        }
      >
        <RNSVGSvgView
          bbHeight={1334}
          bbWidth={750}
          focusable={false}
          height={1334}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 1334,
                "width": 750,
              },
            ]
          }
          width={750}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M0 200 L0 300 L750 200 L750 100 L0 200 Z"
              fill={4289527808}
              propList={
                Array [
                  "fill",
                ]
              }
            />
            <RNSVGPath
              d="M0 350 L0 370 L750 270 L750 250 L0 350 Z"
              fill={4289527808}
              propList={
                Array [
                  "fill",
                ]
              }
            />
            <RNSVGPath
              d="M0 1084 L0 1104 L750 1004 L750 984 L0 1084 Z"
              fill={4278199178}
              propList={
                Array [
                  "fill",
                ]
              }
            />
            <RNSVGPath
              d="M0 1154 L0 1254 L750 1154 L750 1054 L0 1154 Z"
              fill={4278199178}
              propList={
                Array [
                  "fill",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        pointerEvents="none"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            undefined,
          ]
        }
      />
    </View>
    <View
      elevation={0}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Array [
          Object {
            "borderWidth": 0,
            "left": -600,
            "position": "absolute",
            "top": 0,
          },
          Object {
            "height": 1334,
            "width": 600,
          },
        ]
      }
    >
      <View
        dataSet={Object {}}
        style={
          Array [
            Object {
              "backgroundColor": "#eeeeee",
              "flex": 1,
              "justifyContent": "space-between",
              "paddingBottom": 80,
              "paddingTop": 80,
            },
            Array [
              Object {},
            ],
          ]
        }
      >
        <RCTScrollView
          contentContainerStyle={
            Array [
              Object {},
              Object {
                "dataSet": Object {},
              },
            ]
          }
          data={
            Array [
              Object {
                "icon": <Icon
                  allowFontScaling={false}
                  color="#000000"
                  name="power-off"
                  size={24}
                />,
                "id": "LOGOUT",
                "label": "LOGOUT",
                "onPress": [Function],
              },
            ]
          }
          dataSet={Object {}}
          getItem={[Function]}
          getItemCount={[Function]}
          keyExtractor={[Function]}
          onContentSizeChange={[Function]}
          onLayout={[Function]}
          onMomentumScrollBegin={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          style={Object {}}
          viewabilityConfigCallbackPairs={Array []}
        >
          <View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Array [
                      Object {
                        "borderBottomWidth": 1,
                        "borderColor": "#7f7f7f",
                        "paddingBottom": 8,
                        "paddingLeft": 16,
                        "paddingRight": 20,
                        "paddingTop": 8,
                      },
                      Array [
                        Object {},
                      ],
                    ]
                  }
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "flexDirection": "row",
                      }
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        Array [
                          Object {
                            "color": "#000000",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "FontAwesome",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï€‘
                    </Text>
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "width": 12,
                        }
                      }
                    />
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "justifyContent": "center",
                        }
                      }
                    >
                      <Text
                        dataSet={Object {}}
                        style={
                          Object {
                            "backgroundColor": undefined,
                            "color": "#171717",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontStyle": "normal",
                            "fontWeight": "700",
                            "letterSpacing": 0,
                            "lineHeight": 21,
                            "textDecorationLine": undefined,
                          }
                        }
                      >
                        LOGOUT
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RCTScrollView>
      </View>
      <View
        pointerEvents="none"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Background2 should match snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Array [
          Object {
            "borderWidth": 0,
            "left": 0,
            "position": "absolute",
            "top": 0,
          },
          Object {
            "height": 1334,
            "width": 750,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "position": "absolute",
            },
          ]
        }
      >
        <RNSVGSvgView
          bbHeight={1334}
          bbWidth={750}
          focusable={false}
          height={1334}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 1334,
                "width": 750,
              },
            ]
          }
          width={750}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M0 0 L0 667 L375 0 L0 0 Z"
              fill={4289527808}
              propList={
                Array [
                  "fill",
                ]
              }
            />
            <RNSVGPath
              d="M750 1334 L375 1334 L750 667 L750 1334 Z"
              fill={4278199178}
              propList={
                Array [
                  "fill",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        pointerEvents="none"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            undefined,
          ]
        }
      />
    </View>
    <View
      elevation={0}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Array [
          Object {
            "borderWidth": 0,
            "left": -600,
            "position": "absolute",
            "top": 0,
          },
          Object {
            "height": 1334,
            "width": 600,
          },
        ]
      }
    >
      <View
        dataSet={Object {}}
        style={
          Array [
            Object {
              "backgroundColor": "#eeeeee",
              "flex": 1,
              "justifyContent": "space-between",
              "paddingBottom": 80,
              "paddingTop": 80,
            },
            Array [
              Object {},
            ],
          ]
        }
      >
        <RCTScrollView
          contentContainerStyle={
            Array [
              Object {},
              Object {
                "dataSet": Object {},
              },
            ]
          }
          data={
            Array [
              Object {
                "icon": <Icon
                  allowFontScaling={false}
                  color="#000000"
                  name="power-off"
                  size={24}
                />,
                "id": "LOGOUT",
                "label": "LOGOUT",
                "onPress": [Function],
              },
            ]
          }
          dataSet={Object {}}
          getItem={[Function]}
          getItemCount={[Function]}
          keyExtractor={[Function]}
          onContentSizeChange={[Function]}
          onLayout={[Function]}
          onMomentumScrollBegin={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          style={Object {}}
          viewabilityConfigCallbackPairs={Array []}
        >
          <View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Array [
                      Object {
                        "borderBottomWidth": 1,
                        "borderColor": "#7f7f7f",
                        "paddingBottom": 8,
                        "paddingLeft": 16,
                        "paddingRight": 20,
                        "paddingTop": 8,
                      },
                      Array [
                        Object {},
                      ],
                    ]
                  }
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "flexDirection": "row",
                      }
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        Array [
                          Object {
                            "color": "#000000",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "FontAwesome",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï€‘
                    </Text>
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "width": 12,
                        }
                      }
                    />
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "justifyContent": "center",
                        }
                      }
                    >
                      <Text
                        dataSet={Object {}}
                        style={
                          Object {
                            "backgroundColor": undefined,
                            "color": "#171717",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontStyle": "normal",
                            "fontWeight": "700",
                            "letterSpacing": 0,
                            "lineHeight": 21,
                            "textDecorationLine": undefined,
                          }
                        }
                      >
                        LOGOUT
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RCTScrollView>
      </View>
      <View
        pointerEvents="none"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;
